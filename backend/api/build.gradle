/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2020 Armel Soro
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.4.0"
        classpath "gradle.plugin.com.google.cloud.tools:jib-gradle-plugin:2.6.0"
    }
}

apply plugin: "org.jetbrains.kotlin.plugin.spring"
apply plugin: "org.springframework.boot"
apply plugin: "com.google.cloud.tools.jib"

description = 'GraphQL API'

dependencies {
    api project(':dev-feed-common')
    implementation project(':dev-feed-persistence')
    implementation project(':dev-feed-screenshot')
    implementation project(':dev-feed-article-parser')
    implementation project(':crawlers:dev-feed-crawlers-common')
    implementation project(':crawlers:dev-feed-crawler-discoverdev_io')
    implementation project(':crawlers:dev-feed-crawler-engineeringblogs_xyz')
    implementation project(':crawlers:dev-feed-crawler-rm3l_org')

    implementation('com.fasterxml.jackson.module:jackson-module-kotlin')

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2-native-mt')
    //Constrained by graphql-java-tools

    // GraphQL and GraphiQL
    implementation "com.graphql-java-kickstart:graphql-spring-boot-starter:${graphqlSpringBootStarterVersion}"
    implementation "com.graphql-java-kickstart:graphiql-spring-boot-starter:${graphqlSpringBootStarterVersion}"

    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
}

jib {
    to {
        image = "${project.group}/${project.name}"
    }
    from {
        image = 'gcr.io/distroless/java:11'
    }
    container {
        labels = [
                "maintainer": "Armel Soro <armel@rm3l.org>"
        ]
        jvmFlags = ['-Djava.security.egd=file:/dev/./urandom']
        ports = ['8080', '8081']
        format = 'OCI'
    }
}

