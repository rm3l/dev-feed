/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2020 Armel Soro
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
plugins {
    id "com.diffplug.spotless" version "5.14.0"
    id "org.jetbrains.kotlin.jvm" version "1.5.20"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.5.10"
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

subprojects {

    apply plugin: "com.diffplug.spotless"
    apply plugin: "org.jetbrains.kotlin.jvm"

    group = 'org.rm3l'
    version = '1.9.0'

    repositories {
        mavenCentral()
        maven { url "https://jitpack.io" }
    }

    java {
        toolchain{
            languageVersion = JavaLanguageVersion.of(16)
        }
    }

    compileKotlin {
        kotlinOptions {
            languageVersion = "1.4"
            freeCompilerArgs = ["-Xjsr305=strict", "-Xopt-in=kotlin.RequiresOptIn"]
            jvmTarget = JavaVersion.VERSION_15.majorVersion
        }
    }
    compileTestKotlin {
        kotlinOptions {
            languageVersion = "1.4"
            freeCompilerArgs = ["-Xjsr305=strict", "-Xopt-in=kotlin.RequiresOptIn"]
            jvmTarget = JavaVersion.VERSION_15.majorVersion
        }
    }

    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
    }

    spotless { // if you are using build.gradle.kts, instead of 'spotless {' use:
        // configure<com.diffplug.gradle.spotless.SpotlessExtension> {
        kotlin {
            // by default the target is every '.kt' and '.kts` file in the java sourcesets
            ktfmt()    // has its own section below
//            ktlint()   // has its own section below
//            diktat()   // has its own section below
//            prettier() // has its own section below
//            licenseHeader '/* (C)$YEAR */' // or licenseHeaderFile
        }
    }

    dependencies {

        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        implementation "org.jetbrains.kotlin:kotlin-reflect"

        implementation 'org.apache.commons:commons-lang3:3.12.0'

        implementation("org.jsoup:jsoup:1.13.1")

        implementation("org.jetbrains.exposed:exposed-dao:0.32.1")
        implementation("org.jetbrains.exposed:exposed-jdbc:0.32.1")

        implementation 'com.zaxxer:HikariCP:4.0.3'

        //JDBC Drivers
        implementation 'org.xerial:sqlite-jdbc:3.36.0'
        implementation 'com.h2database:h2:1.4.200'
        implementation 'org.postgresql:postgresql:42.2.22'
        implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.3'

        implementation "io.ktor:ktor-client-core:1.6.0"
        //Using Apache Engine Ktor engine, because it is at this time the only one that supports following redirects
        // https://ktor.io/docs/http-client-engines.html#jvm
        implementation "io.ktor:ktor-client-apache:1.6.0"
        implementation "io.ktor:ktor-client-jackson:1.6.1"

        implementation('com.github.chimbori:crux:3.0.1')

        implementation "com.rometools:rome-opml:1.15.0"

        testImplementation(platform('org.junit:junit-bom:5.7.2'))
        testImplementation('org.junit.jupiter:junit-jupiter')
    }
}
