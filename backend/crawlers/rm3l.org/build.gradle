/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2020 Armel Soro
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
plugins {
    id 'application'
    id "org.jetbrains.kotlin.jvm"
    id "com.gradleup.shadow" version "8.3.7"
    id "com.google.cloud.tools.jib" version "3.4.5"
}

description = 'Crawler for rm3l.org'

application {
    mainClassName = "org.rm3l.devfeed.crawlers.rm3l_org.Rm3lOrgCrawlerKt"
}

dependencies {
    api project(':crawlers:dev-feed-crawlers-common')
    implementation project(':crawlers:dev-feed-crawlers-cli')
}

tasks.named('shadowJar', com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    archiveClassifier = 'executable-jar'
}

tasks.withType(AbstractArchiveTask) {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

jib {
    to {
        image = "${project.group}/${project.name}"
    }
    from {
        image = 'registry.access.redhat.com/ubi9/openjdk-17:1.16-3'
        platforms {
            platform {
                architecture = 'amd64'
                os = 'linux'
            }
            platform {
                architecture = 'arm64'
                os = 'linux'
            }
        }
    }
    container {
        labels = [
                "maintainer": "Armel Soro <armel@rm3l.org>"
        ]
        jvmFlags = ['-Djava.security.egd=file:/dev/./urandom']
        format = 'Docker'
    }
}
